@page "/"
@page "/login"
@using JobProcessingSystem.Authentication
@layout AuthLayout
@inject UserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider
@inject IJSRuntime JS
@inject NavigationManager nm

<section class="vh-100" style="background-color: #9A616D;">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-xl-10">
                <div class="card" style="border-radius: 1rem;">
                    <div class="row g-0">
                        <div class="col-md-6 col-lg-5 d-none d-md-block">
                            <img src="http://i.imgur.com/Eor57Ae.jpg"
                                 alt="login form" class="img-fluid" style="border-radius: 1rem 0 0 1rem; min-height: 550px;" />
                        </div>
                        <div class="col-md-6 col-lg-7 d-flex align-items-center">
                            <div class="card-body p-4 p-lg-5 text-black">

                                <form>

                                    <div class="d-flex align-items-center mb-3 pb-1">
                                        <span class="h1 fw-bold mb-0">KRL Hospital</span>
                                    </div>

                                    <h5 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Sign into your account</h5>

                                    <div class="form-outline mb-4">
                                        @*<label class="form-label" for="form2Example17">Username</label>*@
                                        <input type="text" @bind="model.userName" placeholder="Username" id="form2Example17" class="form-control form-control-lg" />
                                    </div>

                                    <div class="form-outline mb-4">
                                        @*<label class="form-label" for="form2Example27">Password</label>*@
                                        <input type="password" @bind="model.password" placeholder="Password" id="form2Example27" class="form-control form-control-lg" />
                                    </div>

                                    <div class="pt-1 mb-4">
                                        <button class="btn btn-dark btn-lg btn-block" type="submit" @onclick="Authenticate">Login</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code {

    private class Model
    {
        public string? userName { get; set; }
        public string? password { get; set; }
    }

    private Model model = new Model();

    private async Task Authenticate()
    {
        var userAccount = userAccountService.GetByUserEmail(model.userName);
        if(userAccount == null || userAccount.password != model.password)
        {
            await JS.InvokeVoidAsync("alert", "Invalid Username or Password");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider) authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                userName = userAccount.userName,
                DeptName = userAccount.DeptName
            });
        nm.NavigateTo("/index", true);
    }
}